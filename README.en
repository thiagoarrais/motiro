Motiro - A project tracking tool
Copyright (C) 2006-2008  Thiago Arrais

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

--------------------------------------------------------------------------------

Motiro is a portal for keeping track of progress on software projects. It
allows developers to stop at a single place to get the information they need
about their project's situation.

The instructions here are intended to get you started with Motiro and running a
first test to see what you can possibly get out of it. For real-life production
use, you will probably need a different setup. Please contact us at the English
development mailing list for further help. Subscription is free and available at
http://lists.sourceforge.net/mailman/listinfo/motiro-devel-en

GET IT RUNNING
=====

Motiro is developed and tested more often on some flavours of Linux -- specially
Debian, Ubuntu, Fedora and Gentoo. These probably should be the best available
systems to host Motiro, but it has been tested and seems to work pretty well on
top of Microsoft Windows or Mac OS X.

If you manage to test Motiro on another platform or happen to find any problem
with those listed above, we we'll be happy to receive your bug report.

1. Strawberries or chocolate?
------

Motiro is available for download in two main flavours: Ruby Gem and the good old
tarball (tar.gz). Each one of the solutions works as well as the other one and
both are very easy to install, but ease is a very subjective matter that depends
on what you prefer and know. You probably already have downloaded the tarball to
read this, but you may want to use the Gem version anyway.

The Gem will solve most dependencies automatically and will probably demand less
effort to set up, but will install some libraries into your system that may be a
little harder to remove in the future (nothing impossible, though). If you like
to have greater control over what is inside your system, maybe you will want to
use the tarball. It has few dependencies and everything is placed inside a
single directory instead of spread across your system.

2. Requirements
------

Motiro is written in Ruby and, in order to run it, you will need the Ruby
interpreter 1.8.2 or later. Development is mainly based on versions 1.8.2 and
1.8.4, therefore those should be the most stable ones, but any later one should
work.

For the default installation, in addition to the Ruby interpreter, you will also
need other freely available software. The programs labelled (tar) will only need
to be installed manually if you choose to install from the tarball. When using
the Gem installation these dependencies will be solved automatically for you,
but those with no label need to be installed by everyone.

  * SQLite 3
  * Subversion command line client (svn) (only if you will be using a Subversion
    repository)
  * Darcs command line client (darcs) (only if you will be using a Darcs
    repository)
  * (tar) POpen4 0.1.1 (available as Ruby Gem: POpen4)
  * (tar) SQLite3-Ruby 1.2.1 or later (available as Ruby Gem: sqlite3-ruby)

After making sure your system has all those requirements, you may proceed with
the installation. Choose your installation method and proceed to the appropriate
section.

3. Installing the Gem
------

In order to install the Gem and have your own local Motiro, you will only need
two commands:

$ gem install motiro --include-dependencies
$ motiro install <somewhere in your system>

This will automatically download Motiro together with any library dependencies
that may be needed and install it. While running the first command, you may be
asked to choose the version for some Gems. Just select one that happens to be
compatible with your platform.

After that, Motiro will be installed in your chosen place and you can make as
many copies as you want to. Just repeat the command motiro install for different
locations.

After the second command, you will be told the local port number that Motiro
chose to run on. If you don't mind pointing your favourite browser to
http://localhost:<port>, you will be able to enjoy your Motiro right away. To
activate the reporter that collects information from your source-code
repository, proceed to the section 5 - Making it work for you.

4. Installing the tarball
------

After double-checking if you have all the requirements, the next step needed to
install from a tarball is downloading the file. As soon as you get your hands on
the archived package, choose an appropriate location in your system and unpack
Motiro.

That is all you need. You will only need to run one command to finally see your
Motiro running and try to edit some pages:

$ ruby script/server

This will start a web server on port 3000. From now on, you just need to point
your preferred browser to http://localhost:3000 and enjoy your installation.
After testing if everything is in place, you will most probably want to make
Motiro show news from your project's source code repository.

5. Making it work for you
------

Motiro comes pre-configured to its own development needs because we actually use
it to keep track of our progress. Seriously.

This may be satisfactory if you are interested in watching us work. But most
people want to keep track of their own project, their own team.

To customize Motiro to your needs, you will need to edit the configuration file
config/motiro.yml. For example, suppose you are trying to keep an eye on the
development of the Ruby on Rails framework. You can make Motiro look at their
Subversion repository by changing the repo line to

repo: http://dev.rubyonrails.org/svn/rails

All you need to do is change the Motiro repository address for yours.   

6. Starting the job scheduler
------

Motiro uses an independent daemon that runs on background to update the
information from the revision control repository. In order to start and stop the
daemon, you can use the script script/ticker.

To start the scheduler, try going where you installed Motiro and saying

% ruby script/ticker start

Analogously, to stop it, you do

% ruby script/ticker stop

On Windows platforms, you are better off starting the scheduler with

% ruby script/ticker run

and stopping it by hitting Ctrl-C.

After a few minutes the reporter will have finished his job and the latest code
revisions will be available on your Motiro.

FURTHER INFO AND TROUBLESHOOTING
====

If you experience any problems with Motiro, if you have any compliments or if
you just want to discuss it, please go to

http://sourceforge.net/mail/?group_id=173790

and choose the mail list most suited to your needs.
